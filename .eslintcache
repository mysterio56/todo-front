[{"C:\\Users\\User\\Development\\todo-app\\src\\reportWebVitals.js":"1","C:\\Users\\User\\Development\\todo-app\\src\\App.js":"2","C:\\Users\\User\\Development\\todo-app\\src\\index.js":"3","C:\\Users\\User\\Development\\todo-app\\src\\components\\TableTasks.js":"4","C:\\Users\\User\\Development\\todo-app\\src\\components\\ModalAddTask.js":"5","C:\\Users\\User\\Development\\todo-app\\src\\components\\DrawerEditTask.js":"6"},{"size":362,"mtime":1611815695590,"results":"7","hashOfConfig":"8"},{"size":1481,"mtime":1611836431067,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1611815695590,"results":"10","hashOfConfig":"8"},{"size":3616,"mtime":1611836960569,"results":"11","hashOfConfig":"8"},{"size":3606,"mtime":1611832085238,"results":"12","hashOfConfig":"8"},{"size":5185,"mtime":1611836529166,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"l6sgix",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\User\\Development\\todo-app\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Development\\todo-app\\src\\App.js",[],"C:\\Users\\User\\Development\\todo-app\\src\\index.js",[],["29","30"],"C:\\Users\\User\\Development\\todo-app\\src\\components\\TableTasks.js",["31"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport CheckCircleOutline from '@material-ui/icons/CheckCircleOutline';\r\nimport HighlightOff from '@material-ui/icons/HighlightOff';\r\n\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n  addtask: {\r\n    width: 100,\r\n  }, \r\n  done: {\r\n    color: 'green'\r\n  },\r\n  pending: {\r\n    color: 'red'\r\n  }\r\n}));\r\n\r\nconst TableTask = ( { tasks, handleOpen = () => {}, toggleDrawerOpen = () => {}, setSelectedId = () => {} } ) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  const openDrawer = ( id ) => {\r\n    setSelectedId(id);\r\n    toggleDrawerOpen();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      \r\n      <Container maxWidth=\"lg\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          <Box mt={4} mb={4}>\r\n            My Tasks\r\n          </Box>\r\n        </Typography> \r\n        <Paper className={classes.paper}>\r\n          <Toolbar \r\n            className={classes.root}\r\n          >\r\n            <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n              Tasks\r\n            </Typography>\r\n            <Tooltip title=\"Add task\">\r\n              <Button color=\"primary\" onClick={handleOpen}>\r\n                <AddCircleOutlineIcon />\r\n                <Typography className={classes.addtask} variant=\"caption\" component=\"div\" ml={4}>\r\n                    Add task\r\n                </Typography>\r\n              </Button>\r\n            </Tooltip>\r\n          </Toolbar>\r\n          <TableContainer>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell></TableCell>\r\n                  <TableCell>Title</TableCell>\r\n                  <TableCell>Created</TableCell>\r\n                  <TableCell>Description</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {tasks.map((row) => (                 \r\n                  <TableRow key={row.id} onClick={ () => { openDrawer(row.id) } }>\r\n                    <TableCell> \r\n                      { row.completed == 1 ? <CheckCircleOutline className={classes.done} /> : <HighlightOff className={classes.pending} />}\r\n                    </TableCell>\r\n                    <TableCell>{row.title}</TableCell>\r\n                    <TableCell>{row.created.slice(0, 10)}</TableCell>\r\n                    <TableCell>{row.description.slice(0, 50)}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Paper>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TableTask;\r\n","C:\\Users\\User\\Development\\todo-app\\src\\components\\ModalAddTask.js",[],["32","33"],"C:\\Users\\User\\Development\\todo-app\\src\\components\\DrawerEditTask.js",["34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":92,"column":39,"nodeType":"41","messageId":"42","endLine":92,"endColumn":41},{"ruleId":"35","replacedBy":"43"},{"ruleId":"37","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":10,"column":8,"nodeType":"47","messageId":"48","endLine":10,"endColumn":18},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["49"],["50"],"no-unused-vars","'InputLabel' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]